#!groovy

pipeline {

    agent any
    stages {
        stage('Git local config') {
            steps {
                sh 'git config --global --add user.name "example"'
                sh 'git config --global --add user.email "example@example.com"'
            }
        }
        stage('Git clone') {
            steps {
                cleanWs()
                git credentialsId: 'bitbucket-key', url: '$CONFIG_REPO_URL'
            }
        }
        stage('Deploy Grafana') {
            steps {
                dir("operations/$AWS_REGION/env") {
                    withProxyEnv() {
                        script {
                            def parameters = readYaml file: 'grafana/parameters.yaml'

                            sh "jx create addon grafana --set adminPassword=" + parameters.defaultAdminPassword
                        }
                    }
                }
            }
        }
    }
}

void withProxyEnv(List envVars = [], def body) {
    List proxies = []
    List envVaraibles = ['GIT_SSH_COMMAND=ssh -o StrictHostKeyChecking=no']
    withAWSParameterStore(credentialsId: '', namePrefixes: '', naming: 'absolute', path: '/proxy', recursive: true, regionName: "$AWS_REGION") {
        script {
            if (env.PROXY_HTTP) {
                proxies << "http_proxy=$PROXY_HTTP"
            }
            if (env.PROXY_HTTPS) {
                proxies << "https_proxy=$PROXY_HTTPS"
            }
            if (env.PROXY_NO) {
                proxies << "no_proxy=$PROXY_NO"
            }
            envVaraibles.addAll(proxies)
        }
    }
    envVaraibles.addAll(envVars)
    withEnv(envVaraibles) {
        body.call()
    }
}
